@model IEnumerable<TaskMasterSovellus.ViewModels.SprintClassList>

@{
    ViewBag.Title = "SprintTasksList";
}


@section scripts {
    <script type="text/javascript">
        //-------------------------------------------------------------modal edit task-----------------------------------------------------------

        $(function () {
            $(".getTaskId").click(function () {
                let taskId = $(this).data("taskid");
                console.log("clicked on task: " + taskId);
                var url = "/SprintTaskList/_ModalEdit/?id=" + taskId;
                console.log(url);

                $("#taskEdit").append(" <b>Opening task edit window for task: " + taskId + ".</b>");
                //gettinng the view to the div
                var $detailDivEdit = $("#taskEdit");
                $.get(url, function (data) {
                    $detailDivEdit.replaceWith(data);
                    $('#ModalTaskEdit').modal('show');
                });

            });

        });

                //-------------------------------------------------------------modal delete task-----------------------------------------------------------

        $(function () {
            $(".getTaskId2").click(function () {
                let taskId = $(this).data("taskid");
                console.log("clicked on task: " + taskId);
                var url = "/SprintTaskList/_ModalDelete/?id=" + taskId;
                console.log(url);

                $("#taskEdit").append(" <b>Opening task edit window for task: " + taskId + ".</b>");
                //gettinng the view to the div
                var $detailDivEdit = $("#taskEdit");
                $.get(url, function (data) {
                    $detailDivEdit.replaceWith(data);
                    $('#ModalTaskEdit').modal('show');
                });

            });

        });
        //-------------------------------------------------------------modal new task-----------------------------------------------------------
        $(function () {
            $(".getTaskId3").click(function () {
                let taskId = $(this).data("taskid");
                //console.log("clicked on task: " + taskId);
                var url = "/SprintTaskList/_ModalCreate/?sprintId=" + taskId;
                console.log(url);

                $("#taskEdit").append(" <b>Opening new task window for sprint: " + taskId + ".</b>");
                //gettinng the view to the div
                var $detailDivEdit = $("#taskEdit");
                $.get(url, function (data) {
                    $detailDivEdit.replaceWith(data);
                    $('#ModalTaskEdit').modal('show');
                });

            });

        });

    </script>

}




<h2> @ViewBag.SprintName</h2>



@*divi johon sijoitetaan editin*@
<div id="taskEdit"></div>
<table class="table sprintTable">
    <tr>
        <th>@Html.DisplayNameFor(model => model.TaskId)</th>
        @*<th>@Html.DisplayNameFor(model => model.StateId)</th>*@
        <th>@Html.DisplayNameFor(model => model.TaskName)</th>
        <th>@Html.DisplayNameFor(model => model.TaskDescription)</th>
        <th>@Html.DisplayNameFor(model => model.TaskPoints)</th>
        <th>@Html.DisplayNameFor(model => model.TaskPriority)</th>
        <th>@Html.DisplayNameFor(model => model.StateName)</th>
        @*<th>@Html.DisplayNameFor(model => model.TemplateConnectionId)</th>*@
        @*<th>@Html.DisplayNameFor(model => model.SprintTemplateId)</th>*@
        @*<th>@Html.DisplayNameFor(model => model.SprintId)</th>*@
        @*<th>@Html.DisplayNameFor(model => model.SprintName)</th>*@
        @*<th>@Html.DisplayNameFor(model => model.StartDate)</th>*@
        @*<th>@Html.DisplayNameFor(model => model.EndDate)</th>*@
        @*<th>@Html.DisplayNameFor(model => model.BackgColor)</th>
            <th>@Html.DisplayNameFor(model => model.ProcessColor)</th>*@

        <th></th>
    </tr>




    @foreach (var item in Model)
    {
        //GETTING VALUE OF BACKGROUND COLOR FOR TASKS PROCESSES
        string bgc = "";
        //string tskcolor = '#' + item.StateColor.ToString();
        if (string.IsNullOrEmpty(item.StateColor))
        {
            bgc = "#b1e8f2";
        }
        else
        {

            bgc = '#' + item.StateColor;
        }

<tr class="sprintrow">
    <td>@Html.DisplayFor(modelItem => item.TaskId)</td>
    @*<td>@Html.DisplayFor(modelItem => item.StateId)</td>*@
    <td>@Html.DisplayFor(modelItem => item.TaskName)</td>
    <td>@Html.DisplayFor(modelItem => item.TaskDescription)</td>
    <td>@Html.DisplayFor(modelItem => item.TaskPoints)</td>
    <td>@Html.DisplayFor(modelItem => item.TaskPriority)</td>
    <td style="background-color:@Html.Raw(bgc);color:black;font-weight:bold">@Html.DisplayFor(modelItem => item.StateName)</td>
    @*<td>@Html.DisplayFor(modelItem => item.TemplateConnectionId)</td>*@
    @*<td>@Html.DisplayFor(modelItem => item.SprintTemplateId)</td>*@
    @*<td>@Html.DisplayFor(modelItem => item.SprintId)</td>*@
    @*<td>@Html.DisplayFor(modelItem => item.SprintName)</td>*@
    @*<td>@Html.DisplayFor(modelItem => item.StartDate)</td>*@
    @*<td>@Html.DisplayFor(modelItem => item.EndDate)</td>*@
    @*<td>@Html.DisplayFor(modelItem => item.BackgColor)</td>
        <td>@Html.DisplayFor(modelItem => item.ProcessColor)</td>*@

    
    <td>
        @*@Html.ActionLink("Edit", "Edit", new { id = item.TaskId }) |*@
        <a class="getTaskId" data-taskid="@item.TaskId">Edit</a> |
        <a class="getTaskId2" data-taskid="@item.TaskId">Delete</a> 

       
    </td>
</tr>

    }

</table>
<div>
    @*taking first model item's sprint id to be the taskid cause when we add new task we need the sprint's id where we add the task*@
    <a style="color:white;" class="getTaskId3 btn btn-success" data-taskid="@ViewBag.SprintId">Add new task</a> |
   
    @Html.ActionLink("Back", "SprintsOfPrjekt", "SprintTaskList", new { id = Session["CurrentProject"] }, null)



</div>