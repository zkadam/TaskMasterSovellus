@model TaskMasterSovellus.Models.Tasks

@{
    ViewBag.Title = "Create";
}
<!-- The Modal -->
    <div class="modal fade" id="ModalTaskEdit">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">


                <div class="modal-header">
                    <h4 class="modal-title">Add new task to sprint</h4>
                </div>


                @*@using (Html.BeginForm())*@
                @using (Html.BeginForm("_ModalCreate", "SprintTaskList", FormMethod.Post, new { id = "createForm" }))

                {
                    @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TaskPoints, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaskPoints, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaskPoints, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TaskPriority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaskPriority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaskPriority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display:none">

                    @Html.LabelFor(model => model.SprintId, "SprintId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SprintId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SprintId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-danger" />
            </div>
        </div>*@
            </div>
                }

                <div class="modal-footer">
                    <input type="submit" form="createForm" class="btn btn-default btn-success" />
                    @*@Html.ActionLink("Back to List", "Index",new {@class="btn btn-primary" })*@
                     <a href="@Url.Action("SprintTasksList","SprintTaskList",new {id=ViewBag.BackSprint },null)" class="btn btn-primary">Cancel</a>

                </div>
            </div>

        </div>
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
