
@model TaskMasterSovellus.Models.Tasks




<!-- The Modal -->
<div class="modal fade" id="ModalTaskEdit">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title">Edit Task</h4>
            </div>

            <div class="modal-body">
                @using (Html.BeginForm("_ModalEdit", "SprintTaskList", FormMethod.Post, new { id = "editForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Task</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.TaskId)

                    <div class="row">

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskPoints, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TaskPoints, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskPoints, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskPriority, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TaskPriority, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskPriority, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SprintId, "SprintId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("SprintId", null ,htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SprintId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                       
                    </div>
                }
            </div>

            <div class="modal-footer">
                <button type="submit" id=@Model.SprintId class="btn btn-primary" form="editForm">Save</button>
                <a href="@Url.Action("SprintTasksList","SprintTaskList",new {id=Model.SprintId })" class="btn btn-primary">Cancel</a>
            </div>

        </div>
    </div>
</div>
